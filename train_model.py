# -*- coding: utf-8 -*-
"""train_model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-S-xNZ6AeYzFtu8NE1bksPJ034qzqHw1
"""

import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
from sklearn.cluster import KMeans
import pickle

# Load data
data = pd.read_excel("marketing_campaign.xlsx")

# Strip any leading/trailing spaces from column names
data.columns = data.columns.str.strip()

# Print columns to verify
print("Columns in dataset:", data.columns.tolist())

# Create Total_Spending by summing the spending columns
data['Total_Spending'] = (
    data['MntWines'] +
    data['MntFruits'] +
    data['MntMeatProducts'] +
    data['MntFishProducts'] +
    data['MntSweetProducts'] +
    data['MntGoldProds']
)

# Select features
X = data[['Income', 'Total_Spending']]

# Handle missing values by filling with mean
X = X.fillna(X.mean())

# Scale data
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# PCA transformation
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)

# Train KMeans
kmeans = KMeans(n_clusters=3, random_state=42)
kmeans.fit(X_pca)

# Save scaler, PCA, and model
with open('scaler.pkl', 'wb') as f:
    pickle.dump(scaler, f)

with open('pca.pkl', 'wb') as f:
    pickle.dump(pca, f)

with open('kmeans_model.pkl', 'wb') as f:
    pickle.dump(kmeans, f)

print("Training complete. Models saved!")